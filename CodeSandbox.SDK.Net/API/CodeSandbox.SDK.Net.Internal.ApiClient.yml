### YamlMime:ManagedReference
items:
- uid: CodeSandbox.SDK.Net.Internal.ApiClient
  commentId: T:CodeSandbox.SDK.Net.Internal.ApiClient
  id: ApiClient
  parent: CodeSandbox.SDK.Net.Internal
  children:
  - CodeSandbox.SDK.Net.Internal.ApiClient.#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)
  - CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Internal.ApiClient.Dispose
  - CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(System.Boolean)
  - CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ApiClient
  nameWithType: ApiClient
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient
  type: Class
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: ApiClient
    path: Internal/APIClient.cs
    startLine: 51
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: >-
    Client to call CodeSandbox API endpoints.

    Supports GET, POST, PUT, and DELETE requests with JSON serialization and detailed error handling.
  example: []
  syntax:
    content: 'public class ApiClient : IDisposable'
    content.vb: Public Class ApiClient Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)
  id: '#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)'
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: ApiClient(string, string, LoggerService, HttpClient)
  nameWithType: ApiClient.ApiClient(string, string, LoggerService, HttpClient)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.ApiClient(string, string, CodeSandbox.SDK.Net.Internal.LoggerService, System.Net.Http.HttpClient)
  type: Constructor
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: .ctor
    path: Internal/APIClient.cs
    startLine: 64
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Create a new ApiClient.
  example: []
  syntax:
    content: public ApiClient(string baseUrl, string authToken = null, LoggerService logger = null, HttpClient httpClient = null)
    parameters:
    - id: baseUrl
      type: System.String
      description: Base URL of the API.
    - id: authToken
      type: System.String
      description: Bearer token for authentication (optional).
    - id: logger
      type: CodeSandbox.SDK.Net.Internal.LoggerService
      description: Logger instance (optional).
    - id: httpClient
      type: System.Net.Http.HttpClient
      description: Optional HttpClient to reuse externally.
    content.vb: Public Sub New(baseUrl As String, authToken As String = Nothing, logger As LoggerService = Nothing, httpClient As HttpClient = Nothing)
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.#ctor*
  nameWithType.vb: ApiClient.New(String, String, LoggerService, HttpClient)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.New(String, String, CodeSandbox.SDK.Net.Internal.LoggerService, System.Net.Http.HttpClient)
  name.vb: New(String, String, LoggerService, HttpClient)
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync``1(System.String,System.Threading.CancellationToken)
  id: GetAsync``1(System.String,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: GetAsync<T>(string, CancellationToken)
  nameWithType: ApiClient.GetAsync<T>(string, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync<T>(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetAsync
    path: Internal/APIClient.cs
    startLine: 108
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Sends a GET request asynchronously and deserializes the JSON response to type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: public Task<T> GetAsync<T>(string path, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
      description: API endpoint path relative to base URL.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    typeParameters:
    - id: T
      description: Type to deserialize the response content to.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Deserialized response of type <code class="typeparamref">T</code>.
    content.vb: Public Function GetAsync(Of T)(path As String, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync*
  exceptions:
  - type: CodeSandbox.SDK.Net.Internal.ApiException
    commentId: T:CodeSandbox.SDK.Net.Internal.ApiException
    description: Thrown if response is not JSON or unsuccessful.
  nameWithType.vb: ApiClient.GetAsync(Of T)(String, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync(Of T)(String, System.Threading.CancellationToken)
  name.vb: GetAsync(Of T)(String, CancellationToken)
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: PostAsync<T>(string, object, CancellationToken)
  nameWithType: ApiClient.PostAsync<T>(string, object, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: PostAsync
    path: Internal/APIClient.cs
    startLine: 149
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Sends a POST request asynchronously with a JSON payload and deserializes the JSON response to type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: public Task<T> PostAsync<T>(string path, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
      description: API endpoint path relative to base URL.
    - id: payload
      type: System.Object
      description: Object payload to serialize to JSON and send.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    typeParameters:
    - id: T
      description: Type to deserialize the response content to.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Deserialized response of type <code class="typeparamref">T</code>.
    content.vb: Public Function PostAsync(Of T)(path As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync*
  exceptions:
  - type: CodeSandbox.SDK.Net.Internal.ApiException
    commentId: T:CodeSandbox.SDK.Net.Internal.ApiException
    description: Thrown if response is not JSON or unsuccessful.
  nameWithType.vb: ApiClient.PostAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: PostAsync(Of T)(String, Object, CancellationToken)
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  id: PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: PutAsync<T>(string, object, CancellationToken)
  nameWithType: ApiClient.PutAsync<T>(string, object, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync<T>(string, object, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: PutAsync
    path: Internal/APIClient.cs
    startLine: 194
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Sends a PUT request asynchronously with a JSON payload and deserializes the JSON response to type <code class="typeparamref">T</code>.
  example: []
  syntax:
    content: public Task<T> PutAsync<T>(string path, object payload, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
      description: API endpoint path relative to base URL.
    - id: payload
      type: System.Object
      description: Object payload to serialize to JSON and send.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    typeParameters:
    - id: T
      description: Type to deserialize the response content to.
    return:
      type: System.Threading.Tasks.Task{{T}}
      description: Deserialized response of type <code class="typeparamref">T</code>.
    content.vb: Public Function PutAsync(Of T)(path As String, payload As Object, cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync*
  exceptions:
  - type: CodeSandbox.SDK.Net.Internal.ApiException
    commentId: T:CodeSandbox.SDK.Net.Internal.ApiException
    description: Thrown if response is not JSON or unsuccessful.
  nameWithType.vb: ApiClient.PutAsync(Of T)(String, Object, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync(Of T)(String, Object, System.Threading.CancellationToken)
  name.vb: PutAsync(Of T)(String, Object, CancellationToken)
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(System.String,System.Threading.CancellationToken)
  id: DeleteAsync(System.String,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: DeleteAsync(string, CancellationToken)
  nameWithType: ApiClient.DeleteAsync(string, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: DeleteAsync
    path: Internal/APIClient.cs
    startLine: 237
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Sends a DELETE request asynchronously.
  example: []
  syntax:
    content: public Task DeleteAsync(string path, CancellationToken cancellationToken = default)
    parameters:
    - id: path
      type: System.String
      description: API endpoint path relative to base URL.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: Cancellation token (optional).
    return:
      type: System.Threading.Tasks.Task
      description: A task representing the asynchronous delete operation.
    content.vb: Public Function DeleteAsync(path As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync*
  exceptions:
  - type: CodeSandbox.SDK.Net.Internal.ApiException
    commentId: T:CodeSandbox.SDK.Net.Internal.ApiException
    description: Thrown if the response status is unsuccessful.
  nameWithType.vb: ApiClient.DeleteAsync(String, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(String, System.Threading.CancellationToken)
  name.vb: DeleteAsync(String, CancellationToken)
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose
  id: Dispose
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ApiClient.Dispose()
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose()
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: Dispose
    path: Internal/APIClient.cs
    startLine: 267
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Disposes the ApiClient and its resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(System.Boolean)
  commentId: M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: CodeSandbox.SDK.Net.Internal.ApiClient
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: ApiClient.Dispose(bool)
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(bool)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Internal/APIClient.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: Dispose
    path: Internal/APIClient.cs
    startLine: 277
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Internal
  summary: Implements the dispose pattern to release managed and unmanaged resources.
  example: []
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Indicates whether the method is called from Dispose.
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose*
  nameWithType.vb: ApiClient.Dispose(Boolean)
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(Boolean)
  name.vb: Dispose(Boolean)
references:
- uid: CodeSandbox.SDK.Net.Internal
  commentId: N:CodeSandbox.SDK.Net.Internal
  href: CodeSandbox.html
  name: CodeSandbox.SDK.Net.Internal
  nameWithType: CodeSandbox.SDK.Net.Internal
  fullName: CodeSandbox.SDK.Net.Internal
  spec.csharp:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Internal
    name: Internal
    href: CodeSandbox.SDK.Net.Internal.html
  spec.vb:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Internal
    name: Internal
    href: CodeSandbox.SDK.Net.Internal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.#ctor*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.#ctor
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient__ctor_System_String_System_String_CodeSandbox_SDK_Net_Internal_LoggerService_System_Net_Http_HttpClient_
  name: ApiClient
  nameWithType: ApiClient.ApiClient
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.ApiClient
  nameWithType.vb: ApiClient.New
  fullName.vb: CodeSandbox.SDK.Net.Internal.ApiClient.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: CodeSandbox.SDK.Net.Internal.LoggerService
  commentId: T:CodeSandbox.SDK.Net.Internal.LoggerService
  parent: CodeSandbox.SDK.Net.Internal
  href: CodeSandbox.SDK.Net.Internal.LoggerService.html
  name: LoggerService
  nameWithType: LoggerService
  fullName: CodeSandbox.SDK.Net.Internal.LoggerService
- uid: System.Net.Http.HttpClient
  commentId: T:System.Net.Http.HttpClient
  parent: System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.net.http.httpclient
  name: HttpClient
  nameWithType: HttpClient
  fullName: System.Net.Http.HttpClient
- uid: System.Net.Http
  commentId: N:System.Net.Http
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Net.Http
  nameWithType: System.Net.Http
  fullName: System.Net.Http
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Net
    name: Net
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net
  - name: .
  - uid: System.Net.Http
    name: Http
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.net.http
- uid: CodeSandbox.SDK.Net.Internal.ApiException
  commentId: T:CodeSandbox.SDK.Net.Internal.ApiException
  href: CodeSandbox.SDK.Net.Internal.ApiException.html
  name: ApiException
  nameWithType: ApiException
  fullName: CodeSandbox.SDK.Net.Internal.ApiException
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient_GetAsync__1_System_String_System_Threading_CancellationToken_
  name: GetAsync
  nameWithType: ApiClient.GetAsync
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{``0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient_PostAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: PostAsync
  nameWithType: ApiClient.PostAsync
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient_PutAsync__1_System_String_System_Object_System_Threading_CancellationToken_
  name: PutAsync
  nameWithType: ApiClient.PutAsync
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient_DeleteAsync_System_String_System_Threading_CancellationToken_
  name: DeleteAsync
  nameWithType: ApiClient.DeleteAsync
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose*
  commentId: Overload:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose
  href: CodeSandbox.SDK.Net.Internal.ApiClient.html#CodeSandbox_SDK_Net_Internal_ApiClient_Dispose
  name: Dispose
  nameWithType: ApiClient.Dispose
  fullName: CodeSandbox.SDK.Net.Internal.ApiClient.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
