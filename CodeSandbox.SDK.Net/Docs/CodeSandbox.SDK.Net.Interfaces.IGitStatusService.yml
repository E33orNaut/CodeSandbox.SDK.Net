### YamlMime:ManagedReference
items:
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  commentId: T:CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  id: IGitStatusService
  parent: CodeSandbox.SDK.Net.Interfaces
  children:
  - CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync(System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync(System.Threading.CancellationToken)
  - CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IGitStatusService
  nameWithType: IGitStatusService
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  type: Interface
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: IGitStatusService
    path: Interfaces/IGitStatusService.cs
    startLine: 9
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Interface for Git status-related operations.
  example: []
  syntax:
    content: public interface IGitStatusService
    content.vb: Public Interface IGitStatusService
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync(System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync(System.Threading.CancellationToken)
  id: GetStatusAsync(System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  langs:
  - csharp
  - vb
  name: GetStatusAsync(CancellationToken)
  nameWithType: IGitStatusService.GetStatusAsync(CancellationToken)
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetStatusAsync
    path: Interfaces/IGitStatusService.cs
    startLine: 16
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Asynchronously retrieves the current Git status.
  example: []
  syntax:
    content: Task<GitStatus> GetStatusAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitStatus}
      description: A task that returns the <xref href="CodeSandbox.SDK.Net.Models.GitStatus" data-throw-if-not-resolved="false"></xref> representing the current status.
    content.vb: Function GetStatusAsync(cancellationToken As CancellationToken = Nothing) As Task(Of GitStatus)
  overload: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync*
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)
  id: GetTargetDiffAsync(System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  langs:
  - csharp
  - vb
  name: GetTargetDiffAsync(CancellationToken)
  nameWithType: IGitStatusService.GetTargetDiffAsync(CancellationToken)
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetTargetDiffAsync
    path: Interfaces/IGitStatusService.cs
    startLine: 23
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Asynchronously retrieves the difference information for the target branch.
  example: []
  syntax:
    content: Task<GitTargetDiff> GetTargetDiffAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitTargetDiff}
      description: A task that returns the <xref href="CodeSandbox.SDK.Net.Models.GitTargetDiff" data-throw-if-not-resolved="false"></xref> for the target branch.
    content.vb: Function GetTargetDiffAsync(cancellationToken As CancellationToken = Nothing) As Task(Of GitTargetDiff)
  overload: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync*
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync(System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync(System.Threading.CancellationToken)
  id: GetRemotesAsync(System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  langs:
  - csharp
  - vb
  name: GetRemotesAsync(CancellationToken)
  nameWithType: IGitStatusService.GetRemotesAsync(CancellationToken)
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetRemotesAsync
    path: Interfaces/IGitStatusService.cs
    startLine: 30
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Asynchronously retrieves the configured Git remotes.
  example: []
  syntax:
    content: Task<GitRemotes> GetRemotesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemotes}
      description: A task that returns the <xref href="CodeSandbox.SDK.Net.Models.GitRemotes" data-throw-if-not-resolved="false"></xref> containing remote information.
    content.vb: Function GetRemotesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of GitRemotes)
  overload: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync*
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  langs:
  - csharp
  - vb
  name: GetRemoteParamsAsync(string, string, CancellationToken)
  nameWithType: IGitStatusService.GetRemoteParamsAsync(string, string, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetRemoteParamsAsync
    path: Interfaces/IGitStatusService.cs
    startLine: 39
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Asynchronously retrieves parameters of a specific Git remote.
  example: []
  syntax:
    content: Task<GitRemoteParams> GetRemoteParamsAsync(string reference, string path, CancellationToken cancellationToken = default)
    parameters:
    - id: reference
      type: System.String
      description: The remote reference name.
    - id: path
      type: System.String
      description: The repository path.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemoteParams}
      description: A task that returns <xref href="CodeSandbox.SDK.Net.Models.GitRemoteParams" data-throw-if-not-resolved="false"></xref> for the specified remote.
    content.vb: Function GetRemoteParamsAsync(reference As String, path As String, cancellationToken As CancellationToken = Nothing) As Task(Of GitRemoteParams)
  overload: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync*
  nameWithType.vb: IGitStatusService.GetRemoteParamsAsync(String, String, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(String, String, System.Threading.CancellationToken)
  name.vb: GetRemoteParamsAsync(String, String, CancellationToken)
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)
  id: GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: CodeSandbox.SDK.Net.Interfaces.IGitStatusService
  langs:
  - csharp
  - vb
  name: GetDiffStatusAsync(string, string, CancellationToken)
  nameWithType: IGitStatusService.GetDiffStatusAsync(string, string, CancellationToken)
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(string, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: CodeSandbox.SDK.Net/Interfaces/IGitStatusService.cs
      branch: master
      repo: https://github.com/E33orNaut/CodeSandbox.SDK.Net.git
    id: GetDiffStatusAsync
    path: Interfaces/IGitStatusService.cs
    startLine: 48
  assemblies:
  - CodeSandbox.SDK.Net
  namespace: CodeSandbox.SDK.Net.Interfaces
  summary: Asynchronously retrieves the diff status between two Git references.
  example: []
  syntax:
    content: Task<GitDiffStatusResult> GetDiffStatusAsync(string baseRef, string headRef, CancellationToken cancellationToken = default)
    parameters:
    - id: baseRef
      type: System.String
      description: The base Git reference.
    - id: headRef
      type: System.String
      description: The head Git reference.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: A token to monitor for cancellation requests.
    return:
      type: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitDiffStatusResult}
      description: A task that returns the <xref href="CodeSandbox.SDK.Net.Models.GitDiffStatusResult" data-throw-if-not-resolved="false"></xref> representing the diff status.
    content.vb: Function GetDiffStatusAsync(baseRef As String, headRef As String, cancellationToken As CancellationToken = Nothing) As Task(Of GitDiffStatusResult)
  overload: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync*
  nameWithType.vb: IGitStatusService.GetDiffStatusAsync(String, String, CancellationToken)
  fullName.vb: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(String, String, System.Threading.CancellationToken)
  name.vb: GetDiffStatusAsync(String, String, CancellationToken)
references:
- uid: CodeSandbox.SDK.Net.Interfaces
  commentId: N:CodeSandbox.SDK.Net.Interfaces
  href: CodeSandbox.html
  name: CodeSandbox.SDK.Net.Interfaces
  nameWithType: CodeSandbox.SDK.Net.Interfaces
  fullName: CodeSandbox.SDK.Net.Interfaces
  spec.csharp:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Interfaces
    name: Interfaces
    href: CodeSandbox.SDK.Net.Interfaces.html
  spec.vb:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Interfaces
    name: Interfaces
    href: CodeSandbox.SDK.Net.Interfaces.html
- uid: CodeSandbox.SDK.Net.Models.GitStatus
  commentId: T:CodeSandbox.SDK.Net.Models.GitStatus
  parent: CodeSandbox.SDK.Net.Models
  href: CodeSandbox.SDK.Net.Models.GitStatus.html
  name: GitStatus
  nameWithType: GitStatus
  fullName: CodeSandbox.SDK.Net.Models.GitStatus
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync
  href: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.html#CodeSandbox_SDK_Net_Interfaces_IGitStatusService_GetStatusAsync_System_Threading_CancellationToken_
  name: GetStatusAsync
  nameWithType: IGitStatusService.GetStatusAsync
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitStatus}
  commentId: T:System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitStatus}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GitStatus>
  nameWithType: Task<GitStatus>
  fullName: System.Threading.Tasks.Task<CodeSandbox.SDK.Net.Models.GitStatus>
  nameWithType.vb: Task(Of GitStatus)
  fullName.vb: System.Threading.Tasks.Task(Of CodeSandbox.SDK.Net.Models.GitStatus)
  name.vb: Task(Of GitStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeSandbox.SDK.Net.Models.GitStatus
    name: GitStatus
    href: CodeSandbox.SDK.Net.Models.GitStatus.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeSandbox.SDK.Net.Models.GitStatus
    name: GitStatus
    href: CodeSandbox.SDK.Net.Models.GitStatus.html
  - name: )
- uid: CodeSandbox.SDK.Net.Models
  commentId: N:CodeSandbox.SDK.Net.Models
  href: CodeSandbox.html
  name: CodeSandbox.SDK.Net.Models
  nameWithType: CodeSandbox.SDK.Net.Models
  fullName: CodeSandbox.SDK.Net.Models
  spec.csharp:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Models
    name: Models
    href: CodeSandbox.SDK.Net.Models.html
  spec.vb:
  - uid: CodeSandbox
    name: CodeSandbox
    href: CodeSandbox.html
  - name: .
  - uid: CodeSandbox.SDK
    name: SDK
    href: CodeSandbox.SDK.html
  - name: .
  - uid: CodeSandbox.SDK.Net
    name: Net
    href: CodeSandbox.SDK.Net.html
  - name: .
  - uid: CodeSandbox.SDK.Net.Models
    name: Models
    href: CodeSandbox.SDK.Net.Models.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: CodeSandbox.SDK.Net.Models.GitTargetDiff
  commentId: T:CodeSandbox.SDK.Net.Models.GitTargetDiff
  parent: CodeSandbox.SDK.Net.Models
  href: CodeSandbox.SDK.Net.Models.GitTargetDiff.html
  name: GitTargetDiff
  nameWithType: GitTargetDiff
  fullName: CodeSandbox.SDK.Net.Models.GitTargetDiff
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync
  href: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.html#CodeSandbox_SDK_Net_Interfaces_IGitStatusService_GetTargetDiffAsync_System_Threading_CancellationToken_
  name: GetTargetDiffAsync
  nameWithType: IGitStatusService.GetTargetDiffAsync
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync
- uid: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitTargetDiff}
  commentId: T:System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitTargetDiff}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GitTargetDiff>
  nameWithType: Task<GitTargetDiff>
  fullName: System.Threading.Tasks.Task<CodeSandbox.SDK.Net.Models.GitTargetDiff>
  nameWithType.vb: Task(Of GitTargetDiff)
  fullName.vb: System.Threading.Tasks.Task(Of CodeSandbox.SDK.Net.Models.GitTargetDiff)
  name.vb: Task(Of GitTargetDiff)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeSandbox.SDK.Net.Models.GitTargetDiff
    name: GitTargetDiff
    href: CodeSandbox.SDK.Net.Models.GitTargetDiff.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeSandbox.SDK.Net.Models.GitTargetDiff
    name: GitTargetDiff
    href: CodeSandbox.SDK.Net.Models.GitTargetDiff.html
  - name: )
- uid: CodeSandbox.SDK.Net.Models.GitRemotes
  commentId: T:CodeSandbox.SDK.Net.Models.GitRemotes
  parent: CodeSandbox.SDK.Net.Models
  href: CodeSandbox.SDK.Net.Models.GitRemotes.html
  name: GitRemotes
  nameWithType: GitRemotes
  fullName: CodeSandbox.SDK.Net.Models.GitRemotes
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync
  href: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.html#CodeSandbox_SDK_Net_Interfaces_IGitStatusService_GetRemotesAsync_System_Threading_CancellationToken_
  name: GetRemotesAsync
  nameWithType: IGitStatusService.GetRemotesAsync
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync
- uid: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemotes}
  commentId: T:System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemotes}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GitRemotes>
  nameWithType: Task<GitRemotes>
  fullName: System.Threading.Tasks.Task<CodeSandbox.SDK.Net.Models.GitRemotes>
  nameWithType.vb: Task(Of GitRemotes)
  fullName.vb: System.Threading.Tasks.Task(Of CodeSandbox.SDK.Net.Models.GitRemotes)
  name.vb: Task(Of GitRemotes)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeSandbox.SDK.Net.Models.GitRemotes
    name: GitRemotes
    href: CodeSandbox.SDK.Net.Models.GitRemotes.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeSandbox.SDK.Net.Models.GitRemotes
    name: GitRemotes
    href: CodeSandbox.SDK.Net.Models.GitRemotes.html
  - name: )
- uid: CodeSandbox.SDK.Net.Models.GitRemoteParams
  commentId: T:CodeSandbox.SDK.Net.Models.GitRemoteParams
  href: CodeSandbox.SDK.Net.Models.GitRemoteParams.html
  name: GitRemoteParams
  nameWithType: GitRemoteParams
  fullName: CodeSandbox.SDK.Net.Models.GitRemoteParams
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync
  href: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.html#CodeSandbox_SDK_Net_Interfaces_IGitStatusService_GetRemoteParamsAsync_System_String_System_String_System_Threading_CancellationToken_
  name: GetRemoteParamsAsync
  nameWithType: IGitStatusService.GetRemoteParamsAsync
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemoteParams}
  commentId: T:System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitRemoteParams}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GitRemoteParams>
  nameWithType: Task<GitRemoteParams>
  fullName: System.Threading.Tasks.Task<CodeSandbox.SDK.Net.Models.GitRemoteParams>
  nameWithType.vb: Task(Of GitRemoteParams)
  fullName.vb: System.Threading.Tasks.Task(Of CodeSandbox.SDK.Net.Models.GitRemoteParams)
  name.vb: Task(Of GitRemoteParams)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeSandbox.SDK.Net.Models.GitRemoteParams
    name: GitRemoteParams
    href: CodeSandbox.SDK.Net.Models.GitRemoteParams.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeSandbox.SDK.Net.Models.GitRemoteParams
    name: GitRemoteParams
    href: CodeSandbox.SDK.Net.Models.GitRemoteParams.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CodeSandbox.SDK.Net.Models.GitDiffStatusResult
  commentId: T:CodeSandbox.SDK.Net.Models.GitDiffStatusResult
  href: CodeSandbox.SDK.Net.Models.GitDiffStatusResult.html
  name: GitDiffStatusResult
  nameWithType: GitDiffStatusResult
  fullName: CodeSandbox.SDK.Net.Models.GitDiffStatusResult
- uid: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync*
  commentId: Overload:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync
  href: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.html#CodeSandbox_SDK_Net_Interfaces_IGitStatusService_GetDiffStatusAsync_System_String_System_String_System_Threading_CancellationToken_
  name: GetDiffStatusAsync
  nameWithType: IGitStatusService.GetDiffStatusAsync
  fullName: CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync
- uid: System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitDiffStatusResult}
  commentId: T:System.Threading.Tasks.Task{CodeSandbox.SDK.Net.Models.GitDiffStatusResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<GitDiffStatusResult>
  nameWithType: Task<GitDiffStatusResult>
  fullName: System.Threading.Tasks.Task<CodeSandbox.SDK.Net.Models.GitDiffStatusResult>
  nameWithType.vb: Task(Of GitDiffStatusResult)
  fullName.vb: System.Threading.Tasks.Task(Of CodeSandbox.SDK.Net.Models.GitDiffStatusResult)
  name.vb: Task(Of GitDiffStatusResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: CodeSandbox.SDK.Net.Models.GitDiffStatusResult
    name: GitDiffStatusResult
    href: CodeSandbox.SDK.Net.Models.GitDiffStatusResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: CodeSandbox.SDK.Net.Models.GitDiffStatusResult
    name: GitDiffStatusResult
    href: CodeSandbox.SDK.Net.Models.GitDiffStatusResult.html
  - name: )
