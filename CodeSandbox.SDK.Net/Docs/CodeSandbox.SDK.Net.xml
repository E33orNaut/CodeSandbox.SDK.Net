<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeSandbox.SDK.Net</name>
    </assembly>
    <members>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IContainerService">
            <summary>
            Defines operations related to managing containers.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IContainerService.SetupContainerAsync(CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets up a container using the specified setup request.
            </summary>
            <param name="request">The container setup request containing configuration details.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation, with a <see cref="!:ContainerSetupResponse"/> result containing setup details.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IGitService">
            <summary>
            Interface for interacting with Git-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the current Git status.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.New.GitModels.GitModels.GitStatusResult"/> representing the current status of the Git repository.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetRemotesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the configured Git remotes.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.New.GitModels.GitModels.GitRemotesResult"/> containing the list of Git remotes.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetTargetDiffAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the difference between the current branch and the specified target branch.
            </summary>
            <param name="branch">The target branch to compare against.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.New.GitModels.GitModels.GitTargetDiffResult"/> representing the diff details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostPullAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously performs a Git pull operation on the specified branch.
            </summary>
            <param name="branch">The branch to pull from.</param>
            <param name="force">Indicates whether to force the pull operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous pull operation.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostDiscardAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously discards changes on the specified file paths.
            </summary>
            <param name="paths">An array of file paths to discard changes for.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a list of strings representing the paths that were discarded.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostCommitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously commits staged changes with the given commit message.
            </summary>
            <param name="message">The commit message to use.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous commit operation.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostRemoteAddAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously adds a new remote repository with the specified URL.
            </summary>
            <param name="url">The URL of the remote repository to add.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation of adding the remote.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IPortService">
            <summary>
            Interface for retrieving port information.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IPortService.GetPortListAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the list of ports.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortListResult"/> containing the list of ports.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService">
            <summary>
            Interface for file system related operations via the sandbox FS API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.WriteFileAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSWriteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a file.
            </summary>
            <param name="request">The request parameters for writing a file.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsPathSearchAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSPathSearchResult,System.Threading.CancellationToken)">
            <summary>
            Asynchronously searches paths in the file system.
            </summary>
            <param name="request">Parameters for path search.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the path search result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsUploadAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.UploadRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously uploads a file.
            </summary>
            <param name="request">The upload request parameters.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with upload result details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsDownloadAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.DownloadRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously downloads a file.
            </summary>
            <param name="request">The download request parameters.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with download result details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsReadFileAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadFileParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a file.
            </summary>
            <param name="request">Parameters for reading a file.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the file read result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.ReadDirAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadDirParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a directory.
            </summary>
            <param name="request">Parameters for reading a directory.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the directory read result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.StatAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSStatParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves file or directory metadata (stat).
            </summary>
            <param name="request">Parameters for retrieving file/directory stats.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the stat result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.CopyAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSCopyParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously copies files or directories.
            </summary>
            <param name="request">Parameters specifying source and destination for the copy operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.RenameAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRenameParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously renames files or directories.
            </summary>
            <param name="request">Parameters specifying the rename operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.RemoveAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRemoveParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously removes files or directories.
            </summary>
            <param name="request">Parameters specifying the remove operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISetupService">
            <summary>
            Interface for managing setup-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.GetSetupProgressAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the current setup progress.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the current setup progress.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SkipStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously skips a specific setup step.
            </summary>
            <param name="stepIndexToSkip">The zero-based index of the step to skip.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after skipping the step.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SkipAllStepsAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously skips all remaining setup steps.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after skipping all steps.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.DisableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously disables the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after disabling setup.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.EnableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously enables the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after enabling setup.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.InitializeSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after initialization.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SetStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets the current step of the setup process.
            </summary>
            <param name="stepIndex">The zero-based index of the step to set as current.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after setting the step.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IShellService">
            <summary>
            Interface for shell-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IShellService.RenameShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellRenameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a shell asynchronously.
            </summary>
            <param name="request">The request containing the shell rename details.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the success response from the API.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISystemService">
            <summary>
            Interface for system-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.UpdateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to update the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemSuccessResponse"/> indicating the result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.HibernateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to hibernate the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemSuccessResponse"/> indicating the result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.GetSystemMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves system metrics asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemMetricsStatus"/> containing system metrics.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ITaskService">
            <summary>
            Interface for task-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ITaskService.CreateSetupTasksAsync(CodeSandbox.SDK.Net.Models.New.SandboxTaskModels.SandboxTaskCreateSetupTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Creates setup tasks asynchronously.
            </summary>
            <param name="request">Request object with task setup details.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxTaskModels.SandboxTaskSuccessResponse`1"/> indicating the result.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.ApiException">
            <summary>
            Exception thrown when API calls fail.
            Contains status code, response content, and optional detailed error info.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.StatusCode">
            <summary>
            Gets the HTTP status code returned by the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.ResponseContent">
            <summary>
            Gets the raw response content from the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.ApiErrorDetails">
            <summary>
            Gets the deserialized error details from the API response, if any.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiException.#ctor(System.String,System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Internal.ApiException"/> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="responseContent">Raw response content.</param>
            <param name="apiErrorDetails">Deserialized error details (optional).</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.ApiClient">
            <summary>
            Client to call CodeSandbox API endpoints.
            Supports GET, POST, PUT, and DELETE requests with JSON serialization and detailed error handling.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)">
            <summary>
            Create a new ApiClient.
            </summary>
            <param name="baseUrl">Base URL of the API.</param>
            <param name="authToken">Bearer token for authentication (optional).</param>
            <param name="logger">Logger instance (optional).</param>
            <param name="httpClient">Optional HttpClient to reuse externally.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a GET request asynchronously and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request asynchronously with a JSON payload and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="payload">Object payload to serialize to JSON and send.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request asynchronously with a JSON payload and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="payload">Object payload to serialize to JSON and send.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a DELETE request asynchronously.
            </summary>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>A task representing the asynchronous delete operation.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if the response status is unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose">
            <summary>
            Disposes the ApiClient and its resources.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(System.Boolean)">
            <summary>
            Implements the dispose pattern to release managed and unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether the method is called from Dispose.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.LogException(System.String,System.String,System.Exception)">
            <summary>
            Logs exception details with method and path context.
            </summary>
            <param name="method">HTTP method used.</param>
            <param name="path">API endpoint path.</param>
            <param name="ex">Exception to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a string to a maximum length with ellipsis if necessary.
            </summary>
            <param name="input">Input string to truncate.</param>
            <param name="max">Maximum length allowed.</param>
            <returns>Truncated string with ellipsis if longer than max.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.ValidatePath(System.String)">
            <summary>
            Validates the API path is not null or empty.
            </summary>
            <param name="path">API path to validate.</param>
            <exception cref="T:System.ArgumentException">Thrown if path is null or whitespace.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.IsJsonResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Checks if the HTTP response content type is JSON.
            </summary>
            <param name="response">HTTP response message.</param>
            <returns>True if Content-Type is application/json, false otherwise.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.TryParseErrorDetails(System.String)">
            <summary>
            Attempts to parse error details from JSON content.
            </summary>
            <param name="content">Response content string.</param>
            <returns>Deserialized error object or null if parsing fails.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.LogLevel">
            <summary>
            Represents the severity level of a log message.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Trace">
            <summary>
            Detailed tracing information.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info">
            <summary>
            General informational messages.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Success">
            <summary>
            Successful operation messages.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Warning">
            <summary>
            Warning messages indicating potential issues.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Error">
            <summary>
            Error messages indicating failures.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.LoggerService">
            <summary>
            Provides logging capabilities with configurable minimum log level and optional custom log output.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.#ctor(CodeSandbox.SDK.Net.Internal.LogLevel)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Internal.LoggerService"/> with the specified minimum log level.
            Logs are written to the console and Debug output by default.
            </summary>
            <param name="minimumLevel">The minimum <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> to log. Defaults to <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/>.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.#ctor(System.Action{System.String},CodeSandbox.SDK.Net.Internal.LogLevel)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Internal.LoggerService"/> with a custom log action and minimum log level.
            </summary>
            <param name="customLogAction">A custom action to handle log messages. If null, defaults to logging to console and Debug output.</param>
            <param name="minimumLevel">The minimum <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> to log. Defaults to <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/>.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogToConsoleAndDebug(System.String)">
            <summary>
            Logs the specified message to both the console and the debug output.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.Log(CodeSandbox.SDK.Net.Internal.LogLevel,System.String)">
            <summary>
            Logs a message with the specified <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> if it meets the minimum level criteria.
            In DEBUG builds, all messages are logged regardless of level.
            </summary>
            <param name="level">The severity level of the log message.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogTrace(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Trace"/> level.
            </summary>
            <param name="message">The trace message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogInfo(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/> level.
            </summary>
            <param name="message">The informational message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogSuccess(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Success"/> level.
            </summary>
            <param name="message">The success message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogWarning(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Warning"/> level.
            </summary>
            <param name="message">The warning message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogError(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Error"/> level.
            </summary>
            <param name="message">The error message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogError(System.String,System.Exception)">
            <summary>
            Logs an error message along with detailed exception information.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="ex">The exception to include in the log.</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortSuccessResponse">
            <summary>
            Represents a successful response from the Port API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortListResult">
            <summary>
            Represents the result payload for a successful port list operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortModel">
            <summary>
            Represents a port and its associated URL.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortErrorResponse">
            <summary>
            Represents an error response from the Port API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.PortModels.PortCommonError">
            <summary>
            Represents common error details for the Port API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSSuccessResponse`1">
            <summary>
            Generic success response wrapper for FS API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSWriteFileRequest">
            <summary>
            Request model for writing a file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSPathSearchRequest">
            <summary>
            Request model for searching paths.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSPathSearchResult">
            <summary>
            Result model for path search.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSPathSearchMatch">
            <summary>
            Represents a single match in a path search result.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadFileParams">
            <summary>
            Parameters for reading a file from the filesystem.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadFileResult">
            <summary>
            Result of reading a file's content.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadDirParams">
            <summary>
            Parameters for reading a directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadDirResult">
            <summary>
            Result of reading a directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSStatParams">
            <summary>
            Parameters for retrieving filesystem statistics.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSStatResult">
            <summary>
            Result of a filesystem stat operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSCopyParams">
            <summary>
            Parameters for copying a file or directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRenameParams">
            <summary>
            Parameters for renaming a file or directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRemoveParams">
            <summary>
            Parameters for removing a file or directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.UploadRequest">
            <summary>
            Request model for uploading a file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.UploadResult">
            <summary>
            Result of a file upload operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.DownloadRequest">
            <summary>
            Request model for downloading files.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.DownloadResult">
            <summary>
            Result of a file download operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FileInfo">
            <summary>
            Represents a file or directory entry in a directory listing.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ContainerService">
            <summary>
            Service to manage container-related operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ContainerService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Creates a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.ContainerService"/>.
            </summary>
            <param name="client">The API client instance (required).</param>
            <param name="logger">Optional logger instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ContainerService.SetupContainerAsync(CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.GitService">
            <summary>
            Service for interacting with Git-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Creates a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.GitService"/>.
            </summary>
            <param name="client">The API client instance (required).</param>
            <param name="logger">Optional logger instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the current Git status.
            </summary>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="!:GitStatusResult"/> representing the current Git status.</returns>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetRemotesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the list of Git remotes.
            </summary>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="!:GitRemotesResponse"/> containing the list of remotes.</returns>
            <returns>A <see cref="!:GitRemotesResponse"/> containing the list of remotes.</returns>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetTargetDiffAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the diff of the target branch.
            </summary>
            <param name="branch">The target branch name.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="!:GitTargetDiffResponse"/> containing the diff details.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="branch"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPullAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Pulls changes from the specified branch.
            </summary>
            <param name="branch">The branch name to pull from.</param>
            <param name="force">If true, forces the pull operation.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="branch"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostDiscardAsync(System.String[],System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Discards changes in the specified file paths.
            </summary>
            <param name="paths">Array of file paths to discard changes for.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A list of discarded file paths.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="paths"/> is null.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostCommitAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Creates a commit with the specified message.
            </summary>
            <param name="message">The commit message.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>The shell ID of the created commit.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="message"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRemoteAddAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Adds a new remote with the specified URL.
            </summary>
            <param name="url">The remote URL to add.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="url"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPushAsync(System.Threading.CancellationToken)">
            <summary>
            Pushes changes to the remote repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPushToRemoteAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Pushes changes to a specific remote and branch.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRenameBranchAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a branch in the local repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRemoteContentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the content of a file from a remote branch or commit.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of changes between two references.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostResetLocalWithRemoteAsync(System.Threading.CancellationToken)">
            <summary>
            Resets the local repository to match the remote.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostCheckoutInitialBranchAsync(System.Threading.CancellationToken)">
            <summary>
            Checks out the initial branch of the repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostTransposeLinesAsync(System.Collections.Generic.List{CodeSandbox.SDK.Net.Models.New.GitModels.GitModels.GitTransposeLinesResultItem},System.Threading.CancellationToken)">
            <summary>
            Maps line numbers between different git commits.
            </summary> 
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.PortService">
            <summary>
            Service for retrieving port information.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.PortService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.PortService"/> class.
            </summary>
            <param name="client">API client instance (required).</param>
            <param name="logger">Optional logger instance. If null, a default logger with Trace level is used.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.PortService.GetPortListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Asynchronously retrieves the list of ports from the API.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, containing the port list response.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails or an unexpected error occurs.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.SetupService">
            <summary>
            Service to manage sandbox setup operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.GetSetupProgressAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves the current setup progress status.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SkipStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Skips a specific step in the setup process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SkipAllStepsAsync(System.Threading.CancellationToken)">
            <summary>
            Skips all remaining steps in the setup process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.DisableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Disables the setup process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.EnableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Enables the setup process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.InitializeSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Initializes the setup process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SetStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sets the current step in the setup process.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ShellService">
            <summary>
            Service for managing terminal and command shells in the sandbox.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.CreateShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellCreateRequest,System.Threading.CancellationToken)">
            <summary>
            Creates a new shell.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.SendInputAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellInRequest,System.Threading.CancellationToken)">
            <summary>
            Sends input to an active shell.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.ListShellsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all available shells.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.OpenShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellOpenRequest,System.Threading.CancellationToken)">
            <summary>
            Opens an existing shell and retrieves its buffer.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.CloseShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellIdRequest,System.Threading.CancellationToken)">
            <summary>
            Closes a shell without terminating the underlying process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.RestartShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellIdRequest,System.Threading.CancellationToken)">
            <summary>
            Restarts an existing shell process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.TerminateShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellIdRequest,System.Threading.CancellationToken)">
            <summary>
            Terminates a shell and its underlying process.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.ResizeShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellResizeRequest,System.Threading.CancellationToken)">
            <summary>
            Resizes a shell.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.RenameShellAsync(CodeSandbox.SDK.Net.Models.New.SandboxShellModels.SandboxShellRenameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a shell.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.SystemService">
            <summary>
            Provides system-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.#ctor(System.Net.Http.HttpClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.SystemService"/> class.
            </summary>
            <param name="httpClient">HTTP client for sending requests.</param>
            <param name="logger">Logger service for logging.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="httpClient"/> or <paramref name="logger"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.UpdateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to update the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemSuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.HibernateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to hibernate the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemSuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.GetSystemMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves system metrics asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxSystemModels.SandboxSystemMetricsStatus"/> containing system metrics.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.TaskService">
            <summary>
            Provides task-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskService.#ctor(System.Net.Http.HttpClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.TaskService"/>.
            </summary>
            <param name="httpClient">HTTP client for sending requests.</param>
            <param name="logger">Logger service for logging.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="httpClient"/> or <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskService.CreateSetupTasksAsync(CodeSandbox.SDK.Net.Models.New.SandboxTaskModels.SandboxTaskCreateSetupTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Creates setup tasks asynchronously.
            </summary>
            <param name="request">Request object with task setup details.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.New.SandboxTaskModels.SandboxTaskSuccessResponse`1"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.TaskServiceException">Thrown when API returns a 400 error with details.</exception>
            <exception cref="T:System.Exception">Thrown on deserialization errors, HTTP failures, or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.TaskServiceException">
            <summary>
            Exception thrown for specific TaskService API errors.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.TaskServiceException.ErrorCode">
            <summary>
            Gets the error code returned by the API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.TaskServiceException"/>.
            </summary>
            <param name="code">API error code.</param>
            <param name="message">API error message.</param>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupRequest">
            <summary>
            Request model for /container/setup endpoint.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupFeature">
            <summary>
            Represents a feature in the container setup request.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupSuccessResponse">
            <summary>
            Success response for /container/setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupTaskDTO">
            <summary>
            Task information returned in a successful container setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupErrorResponse">
            <summary>
            Error response for /container/setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.New.Models.New.SandboxContainerModels.ContainerSetupProtocolError">
            <summary>
            Protocol error details for container setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Services.SandboxFsService">
            <summary>
            Provides file system related operations via the sandbox FS API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Services.SandboxFsService"/>.
            </summary>
            <param name="apiClient">The API client instance (required).</param>
            <param name="logger">Optional logger instance. If null, a default logger with Trace level is used.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="apiClient"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.WriteFileAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSWriteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Writes a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The request data for writing the file.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsPathSearchAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.SandboxFSPathSearchResult,System.Threading.CancellationToken)">
            <summary>
            Searches for paths asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The search parameters.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the search results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsUploadAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.UploadRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The upload request data.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the upload results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsDownloadAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.DownloadRequest,System.Threading.CancellationToken)">
            <summary>
            Downloads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The download request data.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the download results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsReadFileAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadFileParams,System.Threading.CancellationToken)">
            <summary>
            Reads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for reading the file.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the file contents.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.ReadDirAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSReadDirParams,System.Threading.CancellationToken)">
            <summary>
            Reads a directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for reading the directory.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing directory entries.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.StatAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSStatParams,System.Threading.CancellationToken)">
            <summary>
            Gets file or directory statistics asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the stat operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the stat results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.CopyAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSCopyParams,System.Threading.CancellationToken)">
            <summary>
            Copies a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the copy operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.RenameAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRenameParams,System.Threading.CancellationToken)">
            <summary>
            Renames a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the rename operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.RemoveAsync(CodeSandbox.SDK.Net.Models.New.SandboxFSModels.FSRemoveParams,System.Threading.CancellationToken)">
            <summary>
            Removes a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the remove operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
    </members>
</doc>
