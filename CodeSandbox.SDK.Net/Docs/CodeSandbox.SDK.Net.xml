<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CodeSandbox.SDK.Net</name>
    </assembly>
    <members>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IContainerService">
            <summary>
            Defines operations related to managing containers.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IContainerService.SetupContainerAsync(CodeSandbox.SDK.Net.Models.ContainerSetupRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets up a container using the specified setup request.
            </summary>
            <param name="request">The container setup request containing configuration details.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation, with a <see cref="T:CodeSandbox.SDK.Net.Models.ContainerSetupResponse"/> result containing setup details.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IGitService">
            <summary>
            Interface for interacting with Git-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the current Git status.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.GitStatusResult"/> representing the current status of the Git repository.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetRemotesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the configured Git remotes.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.GitRemotesResult"/> containing the list of Git remotes.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.GetTargetDiffAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the difference between the current branch and the specified target branch.
            </summary>
            <param name="branch">The target branch to compare against.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a <see cref="T:CodeSandbox.SDK.Net.Models.GitTargetDiffResult"/> representing the diff details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostPullAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Asynchronously performs a Git pull operation on the specified branch.
            </summary>
            <param name="branch">The branch to pull from.</param>
            <param name="force">Indicates whether to force the pull operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous pull operation.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostDiscardAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            Asynchronously discards changes on the specified file paths.
            </summary>
            <param name="paths">An array of file paths to discard changes for.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns a list of strings representing the paths that were discarded.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostCommitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously commits staged changes with the given commit message.
            </summary>
            <param name="message">The commit message to use.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous commit operation.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitService.PostRemoteAddAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously adds a new remote repository with the specified URL.
            </summary>
            <param name="url">The URL of the remote repository to add.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task representing the asynchronous operation of adding the remote.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IGitStatusService">
            <summary>
            Interface for Git status-related operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the current Git status.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.GitStatus"/> representing the current status.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the difference information for the target branch.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.GitTargetDiff"/> for the target branch.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemotesAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the configured Git remotes.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.GitRemotes"/> containing remote information.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves parameters of a specific Git remote.
            </summary>
            <param name="reference">The remote reference name.</param>
            <param name="path">The repository path.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns <see cref="T:CodeSandbox.SDK.Net.Models.GitRemoteParams"/> for the specified remote.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IGitStatusService.GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the diff status between two Git references.
            </summary>
            <param name="baseRef">The base Git reference.</param>
            <param name="headRef">The head Git reference.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.GitDiffStatusResult"/> representing the diff status.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IPortService">
            <summary>
            Interface for retrieving port information.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IPortService.GetPortListAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves the list of ports.
            </summary>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task that returns the <see cref="T:CodeSandbox.SDK.Net.Models.PortListResponse"/> containing the list of ports.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService">
            <summary>
            Interface for file system related operations via the sandbox FS API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.WriteFileAsync(CodeSandbox.SDK.Models.WriteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously writes a file.
            </summary>
            <param name="request">The request parameters for writing a file.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsPathSearchAsync(CodeSandbox.SDK.Models.PathSearchParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously searches paths in the file system.
            </summary>
            <param name="request">Parameters for path search.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the path search result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsUploadAsync(CodeSandbox.SDK.Models.UploadRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously uploads a file.
            </summary>
            <param name="request">The upload request parameters.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with upload result details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsDownloadAsync(CodeSandbox.SDK.Models.DownloadRequest,System.Threading.CancellationToken)">
            <summary>
            Asynchronously downloads a file.
            </summary>
            <param name="request">The download request parameters.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with download result details.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.FsReadFileAsync(CodeSandbox.SDK.Models.FSReadFileParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a file.
            </summary>
            <param name="request">Parameters for reading a file.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the file read result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.ReadDirAsync(CodeSandbox.SDK.Models.FSReadDirParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously reads a directory.
            </summary>
            <param name="request">Parameters for reading a directory.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the directory read result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.StatAsync(CodeSandbox.SDK.Models.FSStatParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously retrieves file or directory metadata (stat).
            </summary>
            <param name="request">Parameters for retrieving file/directory stats.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with the stat result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.CopyAsync(CodeSandbox.SDK.Models.FSCopyParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously copies files or directories.
            </summary>
            <param name="request">Parameters specifying source and destination for the copy operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.RenameAsync(CodeSandbox.SDK.Models.FSRenameParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously renames files or directories.
            </summary>
            <param name="request">Parameters specifying the rename operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISandboxFsService.RemoveAsync(CodeSandbox.SDK.Models.FSRemoveParams,System.Threading.CancellationToken)">
            <summary>
            Asynchronously removes files or directories.
            </summary>
            <param name="request">Parameters specifying the remove operation.</param>
            <param name="cancellationToken">A token to monitor for cancellation requests.</param>
            <returns>A task returning a success response with an optional result object.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISetupService">
            <summary>
            Interface for managing setup-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.GetSetupProgressAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously gets the current setup progress.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the current setup progress.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SkipStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously skips a specific setup step.
            </summary>
            <param name="stepIndexToSkip">The zero-based index of the step to skip.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after skipping the step.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SkipAllStepsAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously skips all remaining setup steps.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after skipping all steps.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.DisableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously disables the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after disabling setup.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.EnableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously enables the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after enabling setup.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.InitializeSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously initializes the setup process.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after initialization.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISetupService.SetStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Asynchronously sets the current step of the setup process.
            </summary>
            <param name="stepIndex">The zero-based index of the step to set as current.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task returning the updated setup progress after setting the step.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.IShellService">
            <summary>
            Interface for shell-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.IShellService.RenameShellAsync(CodeSandbox.SDK.Net.Models.ShellRenameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a shell asynchronously.
            </summary>
            <param name="request">The request containing the shell rename details.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A task that represents the asynchronous operation. The task result contains the success response from the API.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Interfaces.ISystemService">
            <summary>
            Interface for system-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.UpdateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to update the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.HibernateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to hibernate the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Interfaces.ISystemService.GetSystemMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves system metrics asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> containing system metrics.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ITaskService">
            <summary>
            Interface for task-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ITaskService.CreateSetupTasksAsync(CodeSandbox.SDK.Net.Models.CreateSetupTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Creates setup tasks asynchronously.
            </summary>
            <param name="request">Request object with task setup details.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.TaskServiceException">Thrown when API returns a 400 error with details.</exception>
            <exception cref="T:System.Exception">Thrown on deserialization errors, HTTP failures, or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ContainerService">
            <summary>
            Service to manage container-related operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ContainerService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Creates a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.ContainerService"/>.
            </summary>
            <param name="client">The API client instance (required).</param>
            <param name="logger">Optional logger instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ContainerService.SetupContainerAsync(CodeSandbox.SDK.Net.Models.ContainerSetupRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.GitService">
            <summary>
            Service for interacting with Git-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Creates a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.GitService"/>.
            </summary>
            <param name="client">The API client instance (required).</param>
            <param name="logger">Optional logger instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the current Git status.
            </summary>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.GitStatusResult"/> representing the current Git status.</returns>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetRemotesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the list of Git remotes.
            </summary>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.GitRemotesResult"/> containing the list of remotes.</returns>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.GetTargetDiffAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Gets the diff of the target branch.
            </summary>
            <param name="branch">The target branch name.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.GitTargetDiffResult"/> containing the diff details.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="branch"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPullAsync(System.String,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Pulls changes from the specified branch.
            </summary>
            <param name="branch">The branch name to pull from.</param>
            <param name="force">If true, forces the pull operation.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="branch"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostDiscardAsync(System.String[],System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Discards changes in the specified file paths.
            </summary>
            <param name="paths">Array of file paths to discard changes for.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A list of discarded file paths.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown when <paramref name="paths"/> is null.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostCommitAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Creates a commit with the specified message.
            </summary>
            <param name="message">The commit message.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="message"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRemoteAddAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Adds a new remote with the specified URL.
            </summary>
            <param name="url">The remote URL to add.</param>
            <param name="cancellationToken">Optional cancellation token.</param>
            <returns>A task representing the asynchronous operation.</returns>
            <exception cref="T:System.ArgumentException">Thrown when <paramref name="url"/> is null or whitespace.</exception>
            <exception cref="T:System.Exception">Throws when API call fails or unexpected errors occur.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPushAsync(System.Threading.CancellationToken)">
            <summary>
            Pushes changes to the remote repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostPushToRemoteAsync(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Pushes changes to a specific remote and branch.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRenameBranchAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Renames a branch in the local repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostRemoteContentAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the content of a file from a remote branch or commit.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves the status of changes between two references.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostResetLocalWithRemoteAsync(System.Threading.CancellationToken)">
            <summary>
            Resets the local repository to match the remote.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostCheckoutInitialBranchAsync(System.Threading.CancellationToken)">
            <summary>
            Checks out the initial branch of the repository.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitService.PostTransposeLinesAsync(System.Collections.Generic.List{CodeSandbox.SDK.Net.Models.TransposeLinesResult},System.Threading.CancellationToken)">
            <summary>
            Maps line numbers between different git commits.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.GitStatusService">
            <summary>
            Service for retrieving Git status and related information.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.GitStatusService"/>.
            </summary>
            <param name="client">API client instance (required).</param>
            <param name="logger">Optional logger instance.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.GetStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current Git status.
            </summary>
            <param name="cancellationToken">Token to cancel the asynchronous operation.</param>
            <returns>The current <see cref="T:CodeSandbox.SDK.Net.Models.GitStatus"/>.</returns>
            <exception cref="T:System.Exception">Throws on API or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.GetTargetDiffAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the Git target diff.
            </summary>
            <param name="cancellationToken">Token to cancel the asynchronous operation.</param>
            <returns>The <see cref="T:CodeSandbox.SDK.Net.Models.GitTargetDiff"/>.</returns>
            <exception cref="T:System.Exception">Throws on API or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.GetRemotesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the Git remotes.
            </summary>
            <param name="cancellationToken">Token to cancel the asynchronous operation.</param>
            <returns>The <see cref="T:CodeSandbox.SDK.Net.Models.GitRemotes"/>.</returns>
            <exception cref="T:System.Exception">Throws on API or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.GetRemoteParamsAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the parameters for a specific Git remote reference and path.
            </summary>
            <param name="reference">The Git reference (cannot be null or empty).</param>
            <param name="path">The file path (cannot be null or empty).</param>
            <param name="cancellationToken">Token to cancel the asynchronous operation.</param>
            <returns>The <see cref="T:CodeSandbox.SDK.Net.Models.GitRemoteParams"/> for the given reference and path.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="reference"/> or <paramref name="path"/> is null or empty.</exception>
            <exception cref="T:System.Exception">Throws on API or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.GitStatusService.GetDiffStatusAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the diff status between two Git references.
            </summary>
            <param name="baseRef">The base Git reference (cannot be null or empty).</param>
            <param name="headRef">The head Git reference (cannot be null or empty).</param>
            <param name="cancellationToken">Token to cancel the asynchronous operation.</param>
            <returns>The <see cref="T:CodeSandbox.SDK.Net.Models.GitDiffStatusResult"/> representing the diff status.</returns>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="baseRef"/> or <paramref name="headRef"/> is null or empty.</exception>
            <exception cref="T:System.Exception">Throws on API or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.PortService">
            <summary>
            Service for retrieving port information.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.PortService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.PortService"/> class.
            </summary>
            <param name="client">API client instance (required).</param>
            <param name="logger">Optional logger instance. If null, a default logger with Trace level is used.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.PortService.GetPortListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
            <summary>
            Asynchronously retrieves the list of ports from the API.
            </summary>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the asynchronous operation, containing the port list response.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails or an unexpected error occurs.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.SetupService">
            <summary>
            Service for managing setup-related API endpoints.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.SetupService"/> class.
            </summary>
            <param name="client">API client to send requests.</param>
            <param name="logger">Logger service for logging. If <c>null</c>, a default logger with trace level is used.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="client"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.GetSetupProgressAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current setup progress.
            </summary>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the current setup progress.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SkipStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Skips a specific step in the setup process.
            </summary>
            <param name="stepIndexToSkip">The zero-based index of the step to skip.</param>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the updated setup progress.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SkipAllStepsAsync(System.Threading.CancellationToken)">
            <summary>
            Skips all setup steps.
            </summary>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the updated setup progress after skipping all steps.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.DisableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Disables the setup process.
            </summary>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the updated setup progress after disabling setup.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.EnableSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Enables the setup process.
            </summary>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the updated setup progress after enabling setup.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.InitializeSetupAsync(System.Threading.CancellationToken)">
            <summary>
            Initializes the setup process.
            </summary>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the initialized setup progress.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SetupService.SetStepAsync(System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sets the current step in the setup process.
            </summary>
            <param name="stepIndex">The zero-based index of the step to set.</param>
            <param name="cancellationToken">Cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SetupProgress"/> object representing the updated setup progress.</returns>
            <exception cref="T:System.Exception">Throws if the API call fails.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ApiResponse`1">
            <summary>
            Represents a generic API response wrapper.
            </summary>
            <typeparam name="TResult">The type of the result contained in the response.</typeparam>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.ApiResponse`1.Status">
            <summary>
            Gets or sets the status code of the API response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.ApiResponse`1.Result">
            <summary>
            Gets or sets the result payload of the API response.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ShellService">
            <summary>
            Service for shell-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.#ctor(System.Net.Http.HttpClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.ShellService"/> class.
            </summary>
            <param name="httpClient">HTTP client for requests.</param>
            <param name="logger">Logger service.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="httpClient"/> or <paramref name="logger"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ShellService.RenameShellAsync(CodeSandbox.SDK.Net.Models.ShellRenameRequest,System.Threading.CancellationToken)">
            <summary>
            Renames a shell asynchronously by sending a rename request to the API.
            </summary>
            <param name="request">The shell rename request containing necessary information.</param>
            <param name="cancellationToken">A cancellation token to cancel the operation.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result of the rename operation.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Throws when HTTP request fails, JSON deserialization fails, or an unexpected error occurs.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.ApiException">
            <summary>
            Exception thrown when the API returns an error response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.ApiException.ErrorCode">
            <summary>
            Gets the error code returned by the API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.ApiException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.ApiException"/> class with a specified error code and message.
            </summary>
            <param name="code">The error code returned by the API.</param>
            <param name="message">The error message returned by the API.</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.SystemService">
            <summary>
            Provides system-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.#ctor(System.Net.Http.HttpClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Services.SystemService"/> class.
            </summary>
            <param name="httpClient">HTTP client for sending requests.</param>
            <param name="logger">Logger service for logging.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="httpClient"/> or <paramref name="logger"/> is <c>null</c>.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.UpdateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to update the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.HibernateSystemAsync(System.Threading.CancellationToken)">
            <summary>
            Sends a request to hibernate the system asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.SystemService.GetSystemMetricsAsync(System.Threading.CancellationToken)">
            <summary>
            Retrieves system metrics asynchronously.
            </summary>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> containing system metrics.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.ApiException">Thrown when the API returns an error response.</exception>
            <exception cref="T:System.Exception">Thrown on HTTP failure, JSON deserialization failure, or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.SuccessResponseWithMetrics">
            <summary>
            Wrapper for the success response containing system metrics.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.SuccessResponseWithMetrics.Status">
            <summary>
            Gets or sets the status code returned by the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.SuccessResponseWithMetrics.Result">
            <summary>
            Gets or sets the system metrics result.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.TaskService">
            <summary>
            Provides task-related API operations.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskService.#ctor(System.Net.Http.HttpClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.TaskService"/>.
            </summary>
            <param name="httpClient">HTTP client for sending requests.</param>
            <param name="logger">Logger service for logging.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="httpClient"/> or <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskService.CreateSetupTasksAsync(CodeSandbox.SDK.Net.Models.CreateSetupTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Creates setup tasks asynchronously.
            </summary>
            <param name="request">Request object with task setup details.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>A <see cref="T:CodeSandbox.SDK.Net.Models.SuccessResponse"/> indicating the result.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Services.TaskServiceException">Thrown when API returns a 400 error with details.</exception>
            <exception cref="T:System.Exception">Thrown on deserialization errors, HTTP failures, or unexpected errors.</exception>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Services.TaskServiceException">
            <summary>
            Exception thrown for specific TaskService API errors.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Services.TaskServiceException.ErrorCode">
            <summary>
            Gets the error code returned by the API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Services.TaskServiceException.#ctor(System.Int32,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Services.TaskServiceException"/>.
            </summary>
            <param name="code">API error code.</param>
            <param name="message">API error message.</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.ApiException">
            <summary>
            Exception thrown when API calls fail.
            Contains status code, response content, and optional detailed error info.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.StatusCode">
            <summary>
            Gets the HTTP status code returned by the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.ResponseContent">
            <summary>
            Gets the raw response content from the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Internal.ApiException.ApiErrorDetails">
            <summary>
            Gets the deserialized error details from the API response, if any.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiException.#ctor(System.String,System.Int32,System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:CodeSandbox.SDK.Net.Internal.ApiException"/> class.
            </summary>
            <param name="message">Exception message.</param>
            <param name="statusCode">HTTP status code.</param>
            <param name="responseContent">Raw response content.</param>
            <param name="apiErrorDetails">Deserialized error details (optional).</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.ApiClient">
            <summary>
            Client to call CodeSandbox API endpoints.
            Supports GET, POST, PUT, and DELETE requests with JSON serialization and detailed error handling.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.#ctor(System.String,System.String,CodeSandbox.SDK.Net.Internal.LoggerService,System.Net.Http.HttpClient)">
            <summary>
            Create a new ApiClient.
            </summary>
            <param name="baseUrl">Base URL of the API.</param>
            <param name="authToken">Bearer token for authentication (optional).</param>
            <param name="logger">Logger instance (optional).</param>
            <param name="httpClient">Optional HttpClient to reuse externally.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.GetAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a GET request asynchronously and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.PostAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends a POST request asynchronously with a JSON payload and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="payload">Object payload to serialize to JSON and send.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.PutAsync``1(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Sends a PUT request asynchronously with a JSON payload and deserializes the JSON response to type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">Type to deserialize the response content to.</typeparam>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="payload">Object payload to serialize to JSON and send.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>Deserialized response of type <typeparamref name="T"/>.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if response is not JSON or unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a DELETE request asynchronously.
            </summary>
            <param name="path">API endpoint path relative to base URL.</param>
            <param name="cancellationToken">Cancellation token (optional).</param>
            <returns>A task representing the asynchronous delete operation.</returns>
            <exception cref="T:CodeSandbox.SDK.Net.Internal.ApiException">Thrown if the response status is unsuccessful.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose">
            <summary>
            Disposes the ApiClient and its resources.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Dispose(System.Boolean)">
            <summary>
            Implements the dispose pattern to release managed and unmanaged resources.
            </summary>
            <param name="disposing">Indicates whether the method is called from Dispose.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.LogException(System.String,System.String,System.Exception)">
            <summary>
            Logs exception details with method and path context.
            </summary>
            <param name="method">HTTP method used.</param>
            <param name="path">API endpoint path.</param>
            <param name="ex">Exception to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.Truncate(System.String,System.Int32)">
            <summary>
            Truncates a string to a maximum length with ellipsis if necessary.
            </summary>
            <param name="input">Input string to truncate.</param>
            <param name="max">Maximum length allowed.</param>
            <returns>Truncated string with ellipsis if longer than max.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.ValidatePath(System.String)">
            <summary>
            Validates the API path is not null or empty.
            </summary>
            <param name="path">API path to validate.</param>
            <exception cref="T:System.ArgumentException">Thrown if path is null or whitespace.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.IsJsonResponse(System.Net.Http.HttpResponseMessage)">
            <summary>
            Checks if the HTTP response content type is JSON.
            </summary>
            <param name="response">HTTP response message.</param>
            <returns>True if Content-Type is application/json, false otherwise.</returns>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.ApiClient.TryParseErrorDetails(System.String)">
            <summary>
            Attempts to parse error details from JSON content.
            </summary>
            <param name="content">Response content string.</param>
            <returns>Deserialized error object or null if parsing fails.</returns>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.LogLevel">
            <summary>
            Represents the severity level of a log message.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Trace">
            <summary>
            Detailed tracing information.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info">
            <summary>
            General informational messages.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Success">
            <summary>
            Successful operation messages.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Warning">
            <summary>
            Warning messages indicating potential issues.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Internal.LogLevel.Error">
            <summary>
            Error messages indicating failures.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Internal.LoggerService">
            <summary>
            Provides logging capabilities with configurable minimum log level and optional custom log output.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.#ctor(CodeSandbox.SDK.Net.Internal.LogLevel)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Internal.LoggerService"/> with the specified minimum log level.
            Logs are written to the console and Debug output by default.
            </summary>
            <param name="minimumLevel">The minimum <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> to log. Defaults to <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/>.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.#ctor(System.Action{System.String},CodeSandbox.SDK.Net.Internal.LogLevel)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Net.Internal.LoggerService"/> with a custom log action and minimum log level.
            </summary>
            <param name="customLogAction">A custom action to handle log messages. If null, defaults to logging to console and Debug output.</param>
            <param name="minimumLevel">The minimum <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> to log. Defaults to <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/>.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogToConsoleAndDebug(System.String)">
            <summary>
            Logs the specified message to both the console and the debug output.
            </summary>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.Log(CodeSandbox.SDK.Net.Internal.LogLevel,System.String)">
            <summary>
            Logs a message with the specified <see cref="T:CodeSandbox.SDK.Net.Internal.LogLevel"/> if it meets the minimum level criteria.
            In DEBUG builds, all messages are logged regardless of level.
            </summary>
            <param name="level">The severity level of the log message.</param>
            <param name="message">The message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogTrace(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Trace"/> level.
            </summary>
            <param name="message">The trace message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogInfo(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Info"/> level.
            </summary>
            <param name="message">The informational message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogSuccess(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Success"/> level.
            </summary>
            <param name="message">The success message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogWarning(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Warning"/> level.
            </summary>
            <param name="message">The warning message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogError(System.String)">
            <summary>
            Logs a message with the <see cref="F:CodeSandbox.SDK.Net.Internal.LogLevel.Error"/> level.
            </summary>
            <param name="message">The error message to log.</param>
        </member>
        <member name="M:CodeSandbox.SDK.Net.Internal.LoggerService.LogError(System.String,System.Exception)">
            <summary>
            Logs an error message along with detailed exception information.
            </summary>
            <param name="message">The error message to log.</param>
            <param name="ex">The exception to include in the log.</param>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ContainerSetupFeature">
            <summary>
            Represents a feature used during container setup.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupFeature.Id">
            <summary>
            Gets or sets the unique identifier of the feature.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupFeature.Options">
            <summary>
            Gets or sets the options associated with the feature.
            The dictionary contains option names as keys and their corresponding values.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ContainerSetupRequest">
            <summary>
            Represents a request to set up a container.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupRequest.ContainerId">
            <summary>
            Gets or sets the unique identifier of the container.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupRequest.TemplateId">
            <summary>
            Gets or sets the template identifier used for the container setup.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupRequest.TemplateArgs">
            <summary>
            Gets or sets the template arguments as key-value pairs.
            These arguments customize the template behavior during setup.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupRequest.Features">
            <summary>
            Gets or sets the list of features to be applied during container setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ContainerSetupResponse">
            <summary>
            Represents the response from a container setup request.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupResponse.Status">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ContainerSetupResponse.Result">
            <summary>
            Gets or sets the task details resulting from the container setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.CpuInfo">
            <summary>
            Represents CPU information including core count and usage statistics.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CpuInfo.Cores">
            <summary>
            Gets or sets the number of CPU cores.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CpuInfo.Used">
            <summary>
            Gets or sets the current CPU usage percentage.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CpuInfo.Configured">
            <summary>
            Gets or sets the configured CPU percentage.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.CreateSetupTasksRequest">
            <summary>
            Represents a request to create setup tasks with a list of task definitions.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CreateSetupTasksRequest.Tasks">
            <summary>
            Gets or sets the list of task definitions to be created.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ErrorResponse">
            <summary>
            Represents an error response from the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ErrorResponse.Status">
            <summary>
            Gets or sets the HTTP status code of the error response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ErrorResponse.Error">
            <summary>
            Gets or sets the detailed error information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitDiffStatusResult">
            <summary>
            Represents the result of a Git diff status operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitDiffStatusData">
            <summary>
            Contains detailed information about the Git diff status.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitDiffStatusItem">
            <summary>
            Represents the diff status information for a single file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.Hunk">
            <summary>
            Represents a hunk of changes in a diff.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.Range">
            <summary>
            Represents a range of lines in a file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.MemoryInfo">
            <summary>
            Represents memory usage information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SuccessResponse">
            <summary>
            Represents a successful API response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SuccessResponse.Status">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SuccessResponse.Result">
            <summary>
            Gets or sets the result object returned by the API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitStatusShortFormat">
            <summary>
            Represents short status codes used in Git for file changes.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.None">
            <summary>
            No status.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Modified">
            <summary>
            Modified file.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Added">
            <summary>
            Added file.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Deleted">
            <summary>
            Deleted file.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Renamed">
            <summary>
            Renamed file.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Copied">
            <summary>
            Copied file.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Unmerged">
            <summary>
            Unmerged file (conflicts).
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.GitStatusShortFormat.Untracked">
            <summary>
            Untracked file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitRemoteParams">
            <summary>
            Parameters used to specify a Git remote.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitRemoteParams.Reference">
            <summary>
            Gets or sets the reference name of the remote.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitRemoteParams.Path">
            <summary>
            Gets or sets the path (URL) of the remote.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitDiffStatusParams">
            <summary>
            Parameters used to specify a Git diff status query.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitDiffStatusParams.Base">
            <summary>
            Gets or sets the base commit or branch for the diff.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitDiffStatusParams.Head">
            <summary>
            Gets or sets the head commit or branch for the diff.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.Port">
            <summary>
            Represents a network port with its number and URL.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.Port.PortNumber">
            <summary>
            Gets or sets the port number.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.Port.Url">
            <summary>
            Gets or sets the URL associated with the port.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.PortListResponse">
            <summary>
            Represents the response containing the status and list of ports.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.PortListResponse.Status">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.PortListResponse.Result">
            <summary>
            Gets or sets the result containing the list of ports.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.PortListResult">
            <summary>
            Represents the result containing a list of ports.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.PortListResult.List">
            <summary>
            Gets or sets the list of ports.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ProtocolError">
            <summary>
            Represents a protocol error returned from the API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.RemoteContentResult">
            <summary>
            Represents the response containing remote content data.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.RemoteContentResult.Status">
            <summary>
            Gets or sets the status code of the response.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.RemoteContentResult.Result">
            <summary>
            Gets or sets the result data containing the remote content.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.RemoteContentData">
            <summary>
            Represents the remote content data.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.RemoteContentData.Content">
            <summary>
            Gets or sets the content retrieved remotely as a string.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.CommitResult">
            <summary>
            Represents the response from a commit operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.CommitResultData">
            <summary>
            Contains detailed data returned after a commit operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.DiscardResult">
            <summary>
            Represents the result of a discard operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.DiscardResult.Status">
            <summary>
            Gets or sets the status code of the discard operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.DiscardResult.Result">
            <summary>
            Gets or sets the detailed result data of the discard operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.DiscardResultData">
            <summary>
            Contains detailed information about the discard operation result.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.DiscardResultData.Paths">
            <summary>
            Gets or sets the list of file paths that were discarded.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.CommonError">
            <summary>
            Represents a common error response returned by the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CommonError.Code">
            <summary>
            Gets or sets the error code indicating the type of error.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CommonError.Message">
            <summary>
            Gets or sets the error message describing the error.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.CommonError.Data">
            <summary>
            Gets or sets additional error data, if any.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitStatusResult">
            <summary>
            Represents the response containing the Git status information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitRemotesResult">
            <summary>
            Represents the response containing Git remote repository information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitTargetDiffResult">
            <summary>
            Represents the response containing Git target diff information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ErrorResult">
            <summary>
            Represents an error response with status and error details.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitRemotes">
            <summary>
            Represents the remote repositories configured for a Git repository.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitRemotes.Origin">
            <summary>
            Gets or sets the URL of the 'origin' remote.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitRemotes.Upstream">
            <summary>
            Gets or sets the URL of the 'upstream' remote.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitTargetDiff">
            <summary>
            Represents the difference between two Git targets including commits and ahead/behind counts.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitTargetDiff.Ahead">
            <summary>
            Gets or sets the number of commits the source branch is ahead of the target branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitTargetDiff.Behind">
            <summary>
            Gets or sets the number of commits the source branch is behind the target branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitTargetDiff.Commits">
            <summary>
            Gets or sets the list of commits representing the difference.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitItem">
            <summary>
            Represents a file or item in a Git repository.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.Path">
            <summary>
            Gets or sets the file path.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.Index">
            <summary>
            Gets or sets the index status of the file.
            Possible values include: "", "M" (modified), "A" (added), "D" (deleted), etc.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.WorkingTree">
            <summary>
            Gets or sets the working tree status of the file.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.IsStaged">
            <summary>
            Gets or sets a value indicating whether the file is staged for commit.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.IsConflicted">
            <summary>
            Gets or sets a value indicating whether the file has conflicts.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitItem.FileId">
            <summary>
            Gets or sets the unique file identifier.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitBranchProperties">
            <summary>
            Represents properties and status of a Git branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitBranchProperties.Head">
            <summary>
            Gets or sets the commit hash of the branch head.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitBranchProperties.Branch">
            <summary>
            Gets or sets the name of the branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitBranchProperties.Ahead">
            <summary>
            Gets or sets the number of commits the branch is ahead of the remote branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitBranchProperties.Behind">
            <summary>
            Gets or sets the number of commits the branch is behind the remote branch.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitBranchProperties.Safe">
            <summary>
            Gets or sets a value indicating whether the branch is considered safe (e.g., no conflicts or issues).
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitChangedFiles">
            <summary>
            Represents a map of file IDs to Git items (changed files).
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitCommit">
            <summary>
            Represents a Git commit.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitCommit.Hash">
            <summary>
            Gets or sets the commit hash.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitCommit.Date">
            <summary>
            Gets or sets the commit date as a string.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitCommit.Message">
            <summary>
            Gets or sets the commit message.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.GitCommit.Author">
            <summary>
            Gets or sets the author of the commit.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.GitStatus">
            <summary>
            Represents the status of a Git repository.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.RunCommandRequest">
            <summary>
            Represents a request to run a command in a task.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SetupState">
            <summary>
            Represents the current state of a setup process.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupState.IDLE">
            <summary>
            Setup is idle and has not started.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupState.IN_PROGRESS">
            <summary>
            Setup is currently in progress.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupState.FINISHED">
            <summary>
            Setup has finished successfully.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupState.STOPPED">
            <summary>
            Setup was stopped before completion.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SetupProgress">
            <summary>
            Represents the progress of a setup process, including state and steps.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SetupProgress.State">
            <summary>
            Gets or sets the current state of the setup process.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SetupProgress.Steps">
            <summary>
            Gets or sets the list of steps involved in the setup process.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SetupProgress.CurrentStepIndex">
            <summary>
            Gets or sets the index of the current step being executed.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.ShellRenameRequest">
            <summary>
            Represents a request to rename a shell.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ShellRenameRequest.ShellId">
            <summary>
            Gets or sets the ID of the shell to rename.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.ShellRenameRequest.NewName">
            <summary>
            Gets or sets the new name for the shell.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SetupShellStatus">
            <summary>
            Represents the status of a setup shell step.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupShellStatus.Succeeded">
            <summary>
            The step completed successfully.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupShellStatus.Failed">
            <summary>
            The step failed.
            </summary>
        </member>
        <member name="F:CodeSandbox.SDK.Net.Models.SetupShellStatus.Skipped">
            <summary>
            The step was skipped.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.Step">
            <summary>
            Represents a single step in a setup or task process.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.Step.Name">
            <summary>
            Gets or sets the name of the step.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.Step.Status">
            <summary>
            Gets or sets the status of the step.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.Step.Index">
            <summary>
            Gets or sets the index of the step.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.StorageInfo">
            <summary>
            Represents storage usage information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SystemError">
            <summary>
            Represents a system error returned from the API.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemError.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemError.Message">
            <summary>
            Gets or sets the error message.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemError.Data">
            <summary>
            Gets or sets additional error data, if any.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.SystemMetricsStatus">
            <summary>
            Represents system metrics status information.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemMetricsStatus.Cpu">
            <summary>
            Gets or sets CPU usage information.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemMetricsStatus.Memory">
            <summary>
            Gets or sets memory usage information.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.SystemMetricsStatus.Storage">
            <summary>
            Gets or sets storage usage information.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TaskDefinitionDTO">
            <summary>
            Represents the definition of a task to be run in the setup.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TaskDTO">
            <summary>
            Represents a task in the system.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskDTO.Id">
            <summary>
            Gets or sets the unique identifier of the task.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskDTO.Status">
            <summary>
            Gets or sets the current status of the task.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskDTO.Progress">
            <summary>
            Gets or sets the progress of the task, represented as a value between 0 and 1.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TaskError">
            <summary>
            Represents an error related to a task operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskError.Code">
            <summary>
            Gets or sets the error code.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskError.Message">
            <summary>
            Gets or sets the descriptive error message.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TaskError.Data">
            <summary>
            Gets or sets additional data related to the error.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TaskPreviewDTO">
            <summary>
            Represents a preview of a task, including an optional port and a pull request link.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TransposeLinesResult">
            <summary>
            Represents the result of a transpose lines operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TransposeLinesResult.Status">
            <summary>
            Gets or sets the status code of the operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TransposeLinesResult.Result">
            <summary>
            Gets or sets the list of transpose line result items.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Net.Models.TransposeLineResultItem">
            <summary>
            Represents a single transpose line result item with its file path and line number.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TransposeLineResultItem.Path">
            <summary>
            Gets or sets the file path of the transposed line.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Net.Models.TransposeLineResultItem.Line">
            <summary>
            Gets or sets the line number of the transposed line.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.PathSearchParams">
            <summary>
            Parameters for searching paths matching a pattern.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.PathSearchResult">
            <summary>
            Result of a path search operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.UploadRequest">
            <summary>
            Request model for uploading a file.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.UploadResult">
            <summary>
            Result of a file upload operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.DownloadRequest">
            <summary>
            Request model for downloading files.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.DownloadResult">
            <summary>
            Result of a download operation.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSReadFileParams">
            <summary>
            Parameters for reading a file from the filesystem.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSReadFileResult">
            <summary>
            Result of reading a file's content.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSReadDirParams">
            <summary>
            Parameters for reading a directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSReadDirParams.Path">
            <summary>
            Gets or sets the path of the directory to read.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSReadDirResult">
            <summary>
            Result of reading a directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSReadDirResult.Entries">
            <summary>
            Gets or sets the entries (files/directories) in the directory.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FileInfo">
            <summary>
            Information about a file or directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FileInfo.Name">
            <summary>
            Gets or sets the name of the file or directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FileInfo.IsDirectory">
            <summary>
            Gets or sets a value indicating whether this entry is a directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FileInfo.Size">
            <summary>
            Gets or sets the size of the file in bytes.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FileInfo.ModifiedAt">
            <summary>
            Gets or sets the last modification timestamp.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSStatParams">
            <summary>
            Parameters for retrieving filesystem statistics.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatParams.Path">
            <summary>
            Gets or sets the path to retrieve stats for.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSStatResult">
            <summary>
            Result of a filesystem stat operation.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatResult.Path">
            <summary>
            Gets or sets the path the stats correspond to.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatResult.IsDirectory">
            <summary>
            Gets or sets a value indicating whether the path is a directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatResult.Size">
            <summary>
            Gets or sets the size in bytes.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatResult.CreatedAt">
            <summary>
            Gets or sets the creation timestamp.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSStatResult.ModifiedAt">
            <summary>
            Gets or sets the last modification timestamp.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSCopyParams">
            <summary>
            Parameters for copying a file or directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSCopyParams.SourcePath">
            <summary>
            Gets or sets the source path to copy from.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSCopyParams.DestinationPath">
            <summary>
            Gets or sets the destination path to copy to.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSRenameParams">
            <summary>
            Parameters for renaming a file or directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSRenameParams.SourcePath">
            <summary>
            Gets or sets the source path to rename.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSRenameParams.DestinationPath">
            <summary>
            Gets or sets the destination path name.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSRemoveParams">
            <summary>
            Parameters for removing a file or directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSRemoveParams.Path">
            <summary>
            Gets or sets the path to remove.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSMkdirParams">
            <summary>
            Parameters for creating a new directory.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSMkdirParams.Path">
            <summary>
            Gets or sets the path where the directory will be created.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSWatchParams">
            <summary>
            Parameters for watching a directory or file for changes.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSWatchParams.Path">
            <summary>
            Gets or sets the path to watch.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSUnwatchParams">
            <summary>
            Parameters for stopping to watch a directory or file.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSUnwatchParams.Path">
            <summary>
            Gets or sets the path to stop watching.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.FSWatchResult">
            <summary>
            Result returned when a watch is created.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.FSWatchResult.WatchId">
            <summary>
            Gets or sets the watch ID.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.SuccessResponse">
            <summary>
            Represents a generic success response from the API.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.WriteFileRequest">
            <summary>
            Represents a request to write content to a file at a specified path.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.WriteFileRequest.Path">
            <summary>
            Gets or sets the file path where the content should be written.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.WriteFileRequest.Content">
            <summary>
            Gets or sets the content to write to the file.
            </summary>
        </member>
        <member name="P:CodeSandbox.SDK.Models.WriteFileRequest.IsBinary">
            <summary>
            Gets or sets a value indicating whether the content is binary.
            If true, the content is treated as binary data.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Models.WriteFileRequestSchema">
            <summary>
            Represents the JSON schema for the WriteFileRequest model.
            </summary>
        </member>
        <member name="T:CodeSandbox.SDK.Services.SandboxFsService">
            <summary>
            Provides file system related operations via the sandbox FS API.
            </summary>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.#ctor(CodeSandbox.SDK.Net.Internal.ApiClient,CodeSandbox.SDK.Net.Internal.LoggerService)">
            <summary>
            Initializes a new instance of <see cref="T:CodeSandbox.SDK.Services.SandboxFsService"/>.
            </summary>
            <param name="apiClient">The API client instance (required).</param>
            <param name="logger">Optional logger instance. If null, a default logger with Trace level is used.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="apiClient"/> is null.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.WriteFileAsync(CodeSandbox.SDK.Models.WriteFileRequest,System.Threading.CancellationToken)">
            <summary>
            Writes a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The request data for writing the file.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsPathSearchAsync(CodeSandbox.SDK.Models.PathSearchParams,System.Threading.CancellationToken)">
            <summary>
            Searches for paths asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The search parameters.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the search results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsUploadAsync(CodeSandbox.SDK.Models.UploadRequest,System.Threading.CancellationToken)">
            <summary>
            Uploads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The upload request data.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the upload results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsDownloadAsync(CodeSandbox.SDK.Models.DownloadRequest,System.Threading.CancellationToken)">
            <summary>
            Downloads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">The download request data.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the download results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.FsReadFileAsync(CodeSandbox.SDK.Models.FSReadFileParams,System.Threading.CancellationToken)">
            <summary>
            Reads a file asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for reading the file.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the file contents.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.ReadDirAsync(CodeSandbox.SDK.Models.FSReadDirParams,System.Threading.CancellationToken)">
            <summary>
            Reads a directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for reading the directory.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing directory entries.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.StatAsync(CodeSandbox.SDK.Models.FSStatParams,System.Threading.CancellationToken)">
            <summary>
            Gets file or directory statistics asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the stat operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> containing the stat results.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.CopyAsync(CodeSandbox.SDK.Models.FSCopyParams,System.Threading.CancellationToken)">
            <summary>
            Copies a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the copy operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.RenameAsync(CodeSandbox.SDK.Models.FSRenameParams,System.Threading.CancellationToken)">
            <summary>
            Renames a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the rename operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
        <member name="M:CodeSandbox.SDK.Services.SandboxFsService.RemoveAsync(CodeSandbox.SDK.Models.FSRemoveParams,System.Threading.CancellationToken)">
            <summary>
            Removes a file or directory asynchronously using the sandbox FS API.
            </summary>
            <param name="request">Parameters for the remove operation.</param>
            <param name="cancellationToken">Token to monitor for cancellation requests.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task`1"/> representing the operation result.</returns>
            <exception cref="T:System.Exception">Throws if the operation fails.</exception>
        </member>
    </members>
</doc>
