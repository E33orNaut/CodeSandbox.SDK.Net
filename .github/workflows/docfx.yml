name: Build and Deploy Docs

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install .NET Framework 4.7 Developer Pack
        run: choco install netfx-4.7-devpack -y

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Restore NuGet packages
        run: nuget restore CodeSandbox.SDK.Net.sln

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3.1

      - name: Build .NET Framework 4.7 project (Release)
        run: msbuild CodeSandbox.SDK.Net/CodeSandbox.SDK.Net.csproj /p:Configuration=Release /p:TargetFrameworkVersion=v4.7

      - name: Setup .NET SDK (for DocFX)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Install DocFX
        run: dotnet tool install -g docfx

      - name: Add DocFX to PATH
        run: echo "$env:USERPROFILE\\.dotnet\\tools" | Out-File -Append -Encoding ascii $env:GITHUB_PATH

      - name: Generate DocFX metadata
        run: docfx metadata docfx.json

      - name: Build documentation site with DocFX
        run: docfx build docfx.json -v diagnostic

      - name: Check _site directory
        shell: powershell
        run: |
          if (!(Test-Path "_site") -or !(Get-ChildItem "_site")) {
            Write-Error "_site folder does not exist or is empty"
            exit 1
          }
          Write-Host "_site folder exists and has contents."

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
